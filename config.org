#+TITLE:     Doom Config
#+AUTHOR:    Alister Pillow
#+EMAIL:     alisterhp@mac.com
Time-stamp: <2020-02-14 08:07:45 alister>
* Original Config file
This is the original conf file
#+BEGIN_SRC emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; Place your private configuration here! Remember, you do not need to run 'doom
;; refresh' after modifying this file!


;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets.
(setq user-full-name "Alister Pillow"
      user-mail-address "alisterhp@mac.com")
#+END_SRC

** Default font
The font height needs to be customised per machine/display so I'll create a
=+local.el= file and load it here.
(Use =:#,#w +local.el= with the line-numbers of the fonts below to write those lines)
The +local file will not be added to VC.
#+BEGIN_SRC emacs-lisp
;; Doom exposes five (optional) variables for controlling fonts in Doom. Here
;; are the three important ones:
;;
;; + `doom-font'
;; + `doom-variable-pitch-font'
;; + `doom-big-font' -- used for `doom-big-font-mode'
;;
;; They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
;; font string. You generally only need these two:
;; (setq doom-font (font-spec :family "Iosevka" :height 140))
;; (setq doom-variable-pitch-font (font-spec :family "Ubuntu" :height 140))
;; (setq doom-font (font-spec :family "Office Code Pro" :size 14))
(load! "+local")
#+END_SRC


** Theme
#+BEGIN_SRC emacs-lisp
;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. These are the defaults.
(setq doom-theme 'doom-challenger-deep) ;; Dark and colourful. Okay - easy to see stuff.
;; (setq doom-theme 'doom-gruvbox)
;;(setq doom-theme 'doom-acario-light) ;; light - too white. SRC blocks not well marked
;; tried these
;; misterioso
#+END_SRC

** other notes

Here are some additional functions/macros that could help you configure Doom:

- `load!' for loading external *.el files relative to this one
- `use-package' for configuring packages
- `after!' for running code after a package has loaded
- `add-load-path!' for adding directories to the `load-path', where Emacs
  looks when you load packages with `require' or `use-package'.
- `map!' for binding new keys


To get information about any of these functions/macros, move the cursor over
the highlighted symbol at press 'K' (non-evil users must press 'C-c g k').
This will open documentation for it, including demos of how they are used.

You can also try 'gd' (or 'C-c g d') to jump to their definition and see how
they are implemented.

#+BEGIN_SRC emacs-lisp
;; If you want to change the style of line numbers, change this to `relative' or
;; `nil' to disable it:
(setq display-line-numbers-type nil)
#+END_SRC
* My settings
:PROPERTIES:
:ID:       942B9BF3-C43F-4BBB-A163-2C3F1B699523
:END:
So this gruvbox theme is okay - but I would like to have a better variable pitch
font - and I still find that white on black is blurry on this NEC monitor.
[[youtube:aU1EV8gzZb8][Zaiste's Org-mode linking]]
** Projectile
*** TODO What is the command to perform an index of Projects?
=M-x projectile-discover-projects-in-search-path=
If it doesn't work, may need to delete =~/.emacs.d/.local/cache/projectile.*=
*** Paths
#+BEGIN_SRC emacs-lisp
(setq projectile-project-search-path '("~/Development"))
#+END_SRC
** Org
My whole Doom adventure was sparked by NMartin's work. See [[https://github.com/nmartin84/.doom.d#org3c01be3][his org conf]]
*** Setup
#+BEGIN_SRC emacs-lisp
;; If you intend to use org, it is recommended you change this!
(setq org-directory "~/Dropbox/org/")
(add-hook 'before-save-hook 'time-stamp)
#+END_SRC

*** Appearance
**** org fonts
I like to have big headings
#+BEGIN_SRC emacs-lisp
(after! org
    (set-face-attribute 'org-level-1 nil :height 1.4 :background nil :weight 'light)
    (set-face-attribute 'org-level-2 nil :height 1.3 :background nil :weight 'light)
    (set-face-attribute 'org-level-3 nil :height 1.2 :background nil :weight 'normal)
    (set-face-attribute 'org-level-4 nil :height 1.0 :background nil :weight 'semi-bold)
    (set-face-attribute 'org-link nil    :height 1.0 :background nil :weight 'normal)
    (set-face-attribute 'org-document-title nil :height 1.6 :background nil :weight 'light)
    (setq org-journal-dir "~/Dropbox/org/journal"
          org-journal-date-format "%A, %d %B %Y"
          org-journal-encrypt-journal t
          org-journal-file-type 'monthly))

#+END_SRC

#+RESULTS:
: monthly

**** org variable pitch
this is from my old config and while it *does* work, it seems to apply
everywhere - which is not what I want.
#+BEGIN_SRC emacs-lisp :tangle no
(add-hook 'text-mode-hook
          (lambda ()
            (variable-pitch-mode t)))
#+END_SRC
**** Org Variable pitch v2
From https://zzamboni.org/post/beautifying-org-mode-in-emacs/
#+BEGIN_SRC emacs-lisp
;; (add-hook 'org-mode-hook 'variable-pitch-mode)
;; (add-hook 'org-mode-hook 'visual-line-mode)
#+END_SRC

#+RESULTS:
| visual-line-mode | (closure (t) (&rest _) (add-hook (quote before-save-hook) (quote org-encrypt-entries) nil t)) | er/add-org-mode-expansions | #[0 \301\211\207 [imenu-create-index-function org-imenu-get-tree] 2] | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-show-all append local] 5] | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-babel-show-result-all append local] 5] | org-babel-result-hide-spec | org-babel-hide-all-hashes | variable-pitch-mode | doom-disable-show-paren-mode-h | doom-disable-show-trailing-whitespace-h | +org-enable-auto-reformat-tables-h | +org-enable-auto-update-cookies-h | +org-unfold-to-2nd-level-or-point-h | evil-org-mode | org-bullets-mode | toc-org-enable | +evil-embrace-latex-mode-hook-h | embrace-org-mode-hook | org-journal-update-auto-mode-alist | org-eldoc-load |

**** DONE Fix display of emphasised text by hiding markers
- Fix the display of /emphasised text/
#+BEGIN_SRC emacs-lisp
(setq org-hide-emphasis-markers t)
#+END_SRC
*** My keybindings
My first attempt at adding a key binding - and /it works!/
The key path for Toggle Subtree is =SPC m g s= and it works perfectly.
Also want a shortcut for creating a new journal entry - it's =SPC m j=
#+BEGIN_SRC emacs-lisp
(map! :localleader
      :map org-mode-map
      (:prefix "g"
        :desc "Toggle subtree" "s" 'org-toggle-narrow-to-subtree)
      :desc "New journal entry" "j" 'org-journal-new-entry )
#+END_SRC

*** NMartin's setup
[[https://github.com/nmartin84/.doom.d/blob/master/config.org][config.org]]
**** Keys
#+BEGIN_SRC emacs-lisp
(bind-key "C-<down>" #'+org/insert-item-below)
#+END_SRC
(that worked!)
****

*** Behaviour
**** evil-org
fix the tab visibility cycling
#+BEGIN_SRC emacs-lisp
(after! evil-org
  (remove-hook 'org-tab-first-hook #'+org-cycle-only-current-subtree-h))
#+END_SRC
** Clojure
Paredit mode is not enabled for clojure* by default.
Enable it for clojure modes, then use which-key to get the correct key bindings
#+BEGIN_SRC emacs-lisp
(add-hook! 'cider-repl-mode-hook #'cider-company-enable-fuzzy-completion)
(add-hook! 'cider-mode-hook #'cider-company-enable-fuzzy-completion)
(add-hook! 'clojure-mode-hook #'paredit-mode)
(add-hook! 'clojurec-mode-hook #'paredit-mode)
(add-hook! 'clojurescript-mode-hook #'paredit-mode)
#+END_SRC
